<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.jangelsb.gitx</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>0BA9ED6F-B709-49B6-A448-5F5634D7019F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1A28BCE0-8BFB-4DE1-B761-4B1098D4A4C7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6096A812-AA1D-4D56-BCBD-F0CFB5965568</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>88666437-2755-420F-8B11-5A5225C12C47</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<true/>
			</dict>
		</array>
		<key>88666437-2755-420F-8B11-5A5225C12C47</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>52D747E7-2FE3-4816-8E1E-AB0A99870D5B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>6AF906CF-57FA-41B4-967E-D06828E92FBA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>2B6F959B-E985-412D-A7EC-D2D084773017</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>305D3D82-5368-44F1-B4BB-6F707F32771B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>23C1F948-18A5-486D-8658-BFFDFD5D3F47</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>305D3D82-5368-44F1-B4BB-6F707F32771B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Josh Angelsberg</string>
	<key>description</key>
	<string>A customizable git interface for Alfred</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>git+</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>3</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:input_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Loading...</string>
				<key>script</key>
				<string>source "$input_var_profile_path"

python3 git_filtering_internal.py "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>A customizable git interface for Alfred</string>
				<key>title</key>
				<string>git+</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6096A812-AA1D-4D56-BCBD-F0CFB5965568</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import sys

query = sys.argv[1]

path = query.split(';')[0].strip()

if path.startswith('cd '):
    path = path[3:]

sys.stdout.write(path)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>9</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>path</key>
				<string></string>
				<key>sortBy</key>
				<integer>0</integer>
				<key>sortDirection</key>
				<integer>0</integer>
				<key>sortFoldersAtTop</key>
				<false/>
				<key>sortOverride</key>
				<false/>
				<key>stackBrowserView</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.browseinalfred</string>
			<key>uid</key>
			<string>1A28BCE0-8BFB-4DE1-B761-4B1098D4A4C7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>\['?view in alfred'?\]</string>
						<key>outputlabel</key>
						<string>browse in alfred</string>
						<key>uid</key>
						<string>52D747E7-2FE3-4816-8E1E-AB0A99870D5B</string>
					</dict>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>^(?!cd).+</string>
						<key>outputlabel</key>
						<string>not a command</string>
						<key>uid</key>
						<string>305D3D82-5368-44F1-B4BB-6F707F32771B</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>88666437-2755-420F-8B11-5A5225C12C47</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>full_command="source $input_var_profile_path; $1"

# eval "$full_command" 2&gt;&amp;1
output=$(eval "$full_command" 2&gt;&amp;1)

if [ -z "$output" ]; then
  echo "command succeeded"
else
  echo "$output"
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>11</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>unstackview</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.hidealfred</string>
			<key>uid</key>
			<string>6AF906CF-57FA-41B4-967E-D06828E92FBA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:input_keyword} {query}</string>
				<key>leftcursor</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.showalfred</string>
			<key>uid</key>
			<string>2B6F959B-E985-412D-A7EC-D2D084773017</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>23C1F948-18A5-486D-8658-BFFDFD5D3F47</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># gitx

A customizable git interface for Alfred

## Usage

### Search your repos
![](images/filter_projects.jpg)

### Run commands on your repos
![](images/commands.jpg)

### Check out branches
* you can ⌘c to copy to the branch name!
* you can also make checkout modifiers so that when you hold command ⌘ or alt ⌥ a different command is run 
![](images/checkout_branch.jpg)

### Create branches
![](images/create_branch.jpg)

### Create your own commands
![](images/custom_commands.jpg)

## Version History


#### v2024.7 (WIP)
* Updated Alfred to stack the `view in alfred` command so you can press escape and get back to gitx
* Fixed issues in some cases with checkout and push if the branch name was really long
* Fixed an issue where modifiers were not getting their commands setup correctly
* Fixed issue with the pop command
* Updated the default additional commands with some sweet commands
* Add support for inline commands
* Add support for subtitle actions
* Add support for subcommands
* Add support for searching the subtitle as well
* Update the actions yaml to have icons and to split the branches into 3 different categories: current, local, remote


#### v2024.6
* Now really fixed the issue where you couldn't access bash functions that were in your profile, even though it is sourced (the script needed to run as zsh and not bash)
* Continuing to lay the ground work for more complicated commands (you can now make an action that shows a list of values (predefined or dynamic)
* Added a way to show repo in alfred (by passing [view in alfred] as the command for an action

#### v2024.5
* Fixed issues where you couldn't create a branch or fetch
* Fixed an issue where you couldn't access bash functions that were in your profile, even though it is sourced
* Added true yaml parsing
* Laying the ground work for more robust and complicated config based actions
* Updated the default values to have better onboarding

#### v2024.4
* Add icons for the different commands
* Update workflow icon
* Update screenshots

#### v2024.3
* Add support for yaml based modifiers (you can now add custom modifiers when checking out a branch!)
* source the profile before running a command as well
* Add support for user custom actions based on a yaml file and give some examples
* Update default values, made the git status do a complex bash command to be more helpful</string>
	<key>uidata</key>
	<dict>
		<key>0BA9ED6F-B709-49B6-A448-5F5634D7019F</key>
		<dict>
			<key>xpos</key>
			<real>435</real>
			<key>ypos</key>
			<real>455</real>
		</dict>
		<key>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</key>
		<dict>
			<key>xpos</key>
			<real>655</real>
			<key>ypos</key>
			<real>455</real>
		</dict>
		<key>1A28BCE0-8BFB-4DE1-B761-4B1098D4A4C7</key>
		<dict>
			<key>xpos</key>
			<real>660</real>
			<key>ypos</key>
			<real>235</real>
		</dict>
		<key>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</key>
		<dict>
			<key>note</key>
			<string>extract path</string>
			<key>xpos</key>
			<real>445</real>
			<key>ypos</key>
			<real>235</real>
		</dict>
		<key>23C1F948-18A5-486D-8658-BFFDFD5D3F47</key>
		<dict>
			<key>xpos</key>
			<real>450</real>
			<key>ypos</key>
			<real>755</real>
		</dict>
		<key>2B6F959B-E985-412D-A7EC-D2D084773017</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>665</real>
		</dict>
		<key>6096A812-AA1D-4D56-BCBD-F0CFB5965568</key>
		<dict>
			<key>xpos</key>
			<real>70</real>
			<key>ypos</key>
			<real>165</real>
		</dict>
		<key>6AF906CF-57FA-41B4-967E-D06828E92FBA</key>
		<dict>
			<key>xpos</key>
			<real>435</real>
			<key>ypos</key>
			<real>575</real>
		</dict>
		<key>88666437-2755-420F-8B11-5A5225C12C47</key>
		<dict>
			<key>xpos</key>
			<real>210</real>
			<key>ypos</key>
			<real>370</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>git</string>
				<key>placeholder</key>
				<string>gitx</string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>type this keyword to launch the flow</string>
			<key>label</key>
			<string>keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>input_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
				<key>verticalsize</key>
				<integer>9</integer>
			</dict>
			<key>description</key>
			<string>list out all your repos as a yaml array. 

example (note the two spaces indentation):

- title: Repo 1
  path: $repo_path1
- title: Repo 2
  path: "/path/to/repo2"

NOTE: if you set a “bash profile”, you can use enviroment variables for your paths, e.g, $env_var</string>
			<key>label</key>
			<string>repo list</string>
			<key>type</key>
			<string>textarea</string>
			<key>variable</key>
			<string>input_repo_list</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string>~/.zshenv</string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>If this value, exists the script will source it to be able to read environment variables defined in the repo config</string>
			<key>label</key>
			<string>bash profile</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_var_profile_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>branch=$(git branch --show-current); modified=$(git diff --name-only | wc -l | xargs); if [ "$modified" -eq 0 ]; then echo "branch: ${branch}; clean"; else echo "branch: ${branch}; modified files: $modified"; fi</string>
				<key>placeholder</key>
				<string>git status</string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>this command is run inline and what it returns is displayed as a subtitle</string>
			<key>label</key>
			<string>status command</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>input_status_command</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>actions.yaml</string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string>actions.yaml</string>
				<key>required</key>
				<true/>
			</dict>
			<key>description</key>
			<string>Use default for default values</string>
			<key>label</key>
			<string>default actions</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_actions_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Use this for any actions you want to add to the default actions</string>
			<key>label</key>
			<string>additional actions</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_additional_actions_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>- title: open in Terminal
  command: |
    open -a Terminal .

- title: open in Xcode
  command: |
    xed .</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
				<key>verticalsize</key>
				<integer>9</integer>
			</dict>
			<key>description</key>
			<string>a simple yaml file to create additional commands to run

example:
- title: open in Terminal
  command: |
    open -a Terminal .

- title: open in Xcode
  command: |
    xed .</string>
			<key>label</key>
			<string>additional actions</string>
			<key>type</key>
			<string>textarea</string>
			<key>variable</key>
			<string>input_additional_actions</string>
		</dict>
	</array>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>2024.7.WIP5</string>
	<key>webaddress</key>
	<string>https://jangelsb.github.io</string>
</dict>
</plist>
