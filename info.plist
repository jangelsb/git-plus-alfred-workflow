<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.jangelsb.git</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>0BA9ED6F-B709-49B6-A448-5F5634D7019F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1919C9A2-D0D0-4725-A06D-E3BFBF9E4212</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</key>
		<array/>
		<key>1919C9A2-D0D0-4725-A06D-E3BFBF9E4212</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>20EE05A3-8AD6-4A9E-B23F-E3C3874E8593</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>4045D3BA-5224-4298-A405-E5A6A0271F39</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>F3B999B1-84C8-4012-80A3-DA8117961072</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>7B78FFC7-7766-474F-8F27-7687D3FEEEA4</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>20EE05A3-8AD6-4A9E-B23F-E3C3874E8593</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CC2552BD-9769-4B08-8A3B-C96EAF7E7E85</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1A28BCE0-8BFB-4DE1-B761-4B1098D4A4C7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2AE00149-7402-460C-9302-707723B3B055</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>310813E7-B9A9-4D9D-8C05-3CACAE54BFB6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>555BFC35-7D96-47DD-8BE0-73E8B5768E50</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A9F8153D-1EF2-418D-9E9F-34BC7790CD25</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5AA4C88E-F48A-4EA7-BCE7-7BE5EDD286A4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>555BFC35-7D96-47DD-8BE0-73E8B5768E50</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6096A812-AA1D-4D56-BCBD-F0CFB5965568</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>88666437-2755-420F-8B11-5A5225C12C47</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<true/>
			</dict>
		</array>
		<key>68AB44A8-189C-4E9A-B4C1-9BC09975C369</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6ED4774B-CDE3-4F5C-BE20-4BE64A3C75B4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F2EC4A23-334C-4437-8791-A0C75D68BE8C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>88666437-2755-420F-8B11-5A5225C12C47</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>52D747E7-2FE3-4816-8E1E-AB0A99870D5B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B7FDA93B-4667-4916-959E-E5A38C50D3D2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>843CE930-71A9-45CB-9EC7-0F7F32103C0E</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>2B6F959B-E985-412D-A7EC-D2D084773017</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>305D3D82-5368-44F1-B4BB-6F707F32771B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>C679AB43-6F01-45E7-968D-B70DD4FF5218</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>14821CD6-3F96-4D38-8F2B-C72F6F147739</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>23C1F948-18A5-486D-8658-BFFDFD5D3F47</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>305D3D82-5368-44F1-B4BB-6F707F32771B</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B4417C7E-032D-46A3-84D4-46284A241EDB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>D2397263-C42B-4490-B239-1A9855BBD9F4</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9B91D089-671D-4721-B83B-02F438D5E8B7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A266F8C5-7A35-4798-A0A1-FC822CCD1DAA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A9F8153D-1EF2-418D-9E9F-34BC7790CD25</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2B6F959B-E985-412D-A7EC-D2D084773017</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6AF906CF-57FA-41B4-967E-D06828E92FBA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>6AF906CF-57FA-41B4-967E-D06828E92FBA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>7B78FFC7-7766-474F-8F27-7687D3FEEEA4</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B4417C7E-032D-46A3-84D4-46284A241EDB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D65C0E83-1763-45CD-B902-B32BC6A2680C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B7FDA93B-4667-4916-959E-E5A38C50D3D2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D493D841-862A-4D97-A53F-BFE843B58E67</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C679AB43-6F01-45E7-968D-B70DD4FF5218</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2B6F959B-E985-412D-A7EC-D2D084773017</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CC2552BD-9769-4B08-8A3B-C96EAF7E7E85</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5AA4C88E-F48A-4EA7-BCE7-7BE5EDD286A4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D493D841-862A-4D97-A53F-BFE843B58E67</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>68AB44A8-189C-4E9A-B4C1-9BC09975C369</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>↩ to {var:tv_cmd_action_subtitle}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>2AE00149-7402-460C-9302-707723B3B055</string>
				<key>modifiers</key>
				<integer>524288</integer>
				<key>modifiersubtext</key>
				<string>↩ to {var:tv_alt_action_subtitle}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>E3C7D05D-82C0-4999-8752-C777B4F16BED</string>
				<key>modifiers</key>
				<integer>262144</integer>
				<key>modifiersubtext</key>
				<string>↩ to {var:tv_ctrl_action_subtitle}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>310813E7-B9A9-4D9D-8C05-3CACAE54BFB6</string>
				<key>modifiers</key>
				<integer>131072</integer>
				<key>modifiersubtext</key>
				<string>↩ to {var:tv_shift_action_subtitle}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>D6230711-6C3F-497D-921B-6824C9D43BC4</string>
				<key>modifiers</key>
				<integer>8388608</integer>
				<key>modifiersubtext</key>
				<string>↩ to {var:tv_fn_action_subtitle}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>9B91D089-671D-4721-B83B-02F438D5E8B7</string>
				<key>modifiers</key>
				<integer>1572864</integer>
				<key>modifiersubtext</key>
				<string>↩ to {var:tv_cmd+alt_action_subtitle}</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D6230711-6C3F-497D-921B-6824C9D43BC4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D65C0E83-1763-45CD-B902-B32BC6A2680C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F92D1386-9903-4537-A872-16A251038CEB</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>↩ to run command</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E3C7D05D-82C0-4999-8752-C777B4F16BED</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F2EC4A23-334C-4437-8791-A0C75D68BE8C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B7FDA93B-4667-4916-959E-E5A38C50D3D2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F92D1386-9903-4537-A872-16A251038CEB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A266F8C5-7A35-4798-A0A1-FC822CCD1DAA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Josh Angelsberg</string>
	<key>description</key>
	<string>A customizable git interface for Alfred</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>git+</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>3</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:input_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Loading...</string>
				<key>script</key>
				<string>source "$input_var_profile_path"

python3 git_filtering_internal.py "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>A customizable git interface for Alfred</string>
				<key>title</key>
				<string>git+</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6096A812-AA1D-4D56-BCBD-F0CFB5965568</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>path</key>
				<string></string>
				<key>sortBy</key>
				<integer>0</integer>
				<key>sortDirection</key>
				<integer>0</integer>
				<key>sortFoldersAtTop</key>
				<false/>
				<key>sortOverride</key>
				<false/>
				<key>stackBrowserView</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.browseinalfred</string>
			<key>uid</key>
			<string>1A28BCE0-8BFB-4DE1-B761-4B1098D4A4C7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>import sys

query = sys.argv[1]

path = query.split(';')[0].strip()

if path.startswith('cd '):
    path = path[3:]

sys.stdout.write(path)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>9</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>import sys
import re

query = sys.argv[1]


# Remove the line with [reload:.*]
cleaned_query = re.sub(r"\[reload:.*\]", "", query, flags=re.MULTILINE).strip()

# Extract the path 
path_match = re.search(r"\[reload:(.*)\]", query)
path = f"{path_match.group(1)}" if path_match else ""

# Print the results separated by ;;;
sys.stdout.write(f"{cleaned_query};;;{path}")</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>9</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>20EE05A3-8AD6-4A9E-B23F-E3C3874E8593</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:output}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>555BFC35-7D96-47DD-8BE0-73E8B5768E50</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{query}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>output</key>
					<string>{var:split1}</string>
					<key>path</key>
					<string>{var:split2}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>5AA4C88E-F48A-4EA7-BCE7-7BE5EDD286A4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>delimiter</key>
				<string>;;;</string>
				<key>discardemptyarguments</key>
				<false/>
				<key>outputas</key>
				<integer>0</integer>
				<key>trimarguments</key>
				<false/>
				<key>variableprefix</key>
				<string>split</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.split</string>
			<key>uid</key>
			<string>CC2552BD-9769-4B08-8A3B-C96EAF7E7E85</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>\['?view in alfred'?\]</string>
						<key>outputlabel</key>
						<string>browse in alfred</string>
						<key>uid</key>
						<string>52D747E7-2FE3-4816-8E1E-AB0A99870D5B</string>
					</dict>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>\[input_new_lines\]</string>
						<key>outputlabel</key>
						<string>has_textview_input</string>
						<key>uid</key>
						<string>D2397263-C42B-4490-B239-1A9855BBD9F4</string>
					</dict>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>^\/</string>
						<key>outputlabel</key>
						<string>location</string>
						<key>uid</key>
						<string>14821CD6-3F96-4D38-8F2B-C72F6F147739</string>
					</dict>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>^(?!cd).+</string>
						<key>outputlabel</key>
						<string>not a command</string>
						<key>uid</key>
						<string>305D3D82-5368-44F1-B4BB-6F707F32771B</string>
					</dict>
					<dict>
						<key>inputstring</key>
						<string>{var:tv_command}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>1</integer>
						<key>matchstring</key>
						<string></string>
						<key>outputlabel</key>
						<string>has_textview_action</string>
						<key>uid</key>
						<string>843CE930-71A9-45CB-9EC7-0F7F32103C0E</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>command</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>88666437-2755-420F-8B11-5A5225C12C47</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>full_command="source $input_var_profile_path; source $input_var_functions_path; $1"

# Execute the command and capture the output and error messages
output=$(eval "$full_command" 2&gt;&amp;1)

# Check if the output is empty
if [ -z "$output" ]; then
  echo "command succeeded"
else
  echo "$output"
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>11</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0BA9ED6F-B709-49B6-A448-5F5634D7019F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>\[tv_reload\]</string>
						<key>outputlabel</key>
						<string>should reload tv</string>
						<key>uid</key>
						<string>7B78FFC7-7766-474F-8F27-7687D3FEEEA4</string>
					</dict>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>\[reload:.*]</string>
						<key>outputlabel</key>
						<string>should reload</string>
						<key>uid</key>
						<string>4045D3BA-5224-4298-A405-E5A6A0271F39</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>1919C9A2-D0D0-4725-A06D-E3BFBF9E4212</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>tv_loading</key>
					<string>Running command...</string>
					<key>tv_loading_old</key>
					<string>running `{query}` ...</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>B7FDA93B-4667-4916-959E-E5A38C50D3D2</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:path}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>A9F8153D-1EF2-418D-9E9F-34BC7790CD25</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>unstackview</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.hidealfred</string>
			<key>uid</key>
			<string>6AF906CF-57FA-41B4-967E-D06828E92FBA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>\[reload:.*]</string>
						<key>outputlabel</key>
						<string>will reload</string>
						<key>uid</key>
						<string>7B78FFC7-7766-474F-8F27-7687D3FEEEA4</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:tv_cmd_action}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>68AB44A8-189C-4E9A-B4C1-9BC09975C369</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>behaviour</key>
				<integer>2</integer>
				<key>fontmode</key>
				<integer>0</integer>
				<key>fontsizing</key>
				<integer>0</integer>
				<key>footertext</key>
				<string></string>
				<key>inputfile</key>
				<string>tv_script.sh</string>
				<key>inputtype</key>
				<integer>1</integer>
				<key>loadingtext</key>
				<string>{var:tv_loading}</string>
				<key>outputmode</key>
				<integer>0</integer>
				<key>scriptinput</key>
				<integer>0</integer>
				<key>spellchecking</key>
				<integer>0</integer>
				<key>stackview</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.userinterface.text</string>
			<key>uid</key>
			<string>D493D841-862A-4D97-A53F-BFE843B58E67</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>externaltriggerid</key>
				<string>tv_reload</string>
				<key>passinputasargument</key>
				<true/>
				<key>passvariables</key>
				<true/>
				<key>workflowbundleid</key>
				<string>self</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.callexternaltrigger</string>
			<key>uid</key>
			<string>F3B999B1-84C8-4012-80A3-DA8117961072</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:tv_alt_action}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>2AE00149-7402-460C-9302-707723B3B055</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:input_keyword} {query}</string>
				<key>leftcursor</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.showalfred</string>
			<key>uid</key>
			<string>2B6F959B-E985-412D-A7EC-D2D084773017</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:tv_ctrl_action}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>E3C7D05D-82C0-4999-8752-C777B4F16BED</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>source "$input_var_profile_path"

python3 location_arg_parser.py "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C679AB43-6F01-45E7-968D-B70DD4FF5218</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:tv_shift_action}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>310813E7-B9A9-4D9D-8C05-3CACAE54BFB6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:tv_fn_action}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>D6230711-6C3F-497D-921B-6824C9D43BC4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{var:tv_cmd+alt_action}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>9B91D089-671D-4721-B83B-02F438D5E8B7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>23C1F948-18A5-486D-8658-BFFDFD5D3F47</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>import sys
import os
import shlex

def escape_param(param):
    return shlex.quote(param) if param else param

def get_env_variable(var_name, default=None):
    return os.environ.get(var_name, default)

command_to_run = get_env_variable("command_to_run")
input_new_lines = escape_param(get_env_variable("input_new_lines"))


sys.stdout.write(command_to_run.replace('[input_new_lines]', input_new_lines))</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>9</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>A266F8C5-7A35-4798-A0A1-FC822CCD1DAA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>behaviour</key>
				<integer>1</integer>
				<key>fontmode</key>
				<integer>0</integer>
				<key>fontsizing</key>
				<integer>0</integer>
				<key>footertext</key>
				<string>⌘↩ run command · ⎋ go back</string>
				<key>inputfile</key>
				<string></string>
				<key>inputtype</key>
				<integer>0</integer>
				<key>loadingtext</key>
				<string></string>
				<key>outputmode</key>
				<integer>0</integer>
				<key>scriptinput</key>
				<integer>0</integer>
				<key>spellchecking</key>
				<integer>0</integer>
				<key>stackview</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.userinterface.text</string>
			<key>uid</key>
			<string>D65C0E83-1763-45CD-B902-B32BC6A2680C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>command_to_run</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>B4417C7E-032D-46A3-84D4-46284A241EDB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>is_alfred_stacked</key>
					<string>0</string>
					<key>should_rerun</key>
					<string>1</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>F2EC4A23-334C-4437-8791-A0C75D68BE8C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>input_new_lines</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>F92D1386-9903-4537-A872-16A251038CEB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>availableviaurlhandler</key>
				<false/>
				<key>triggerid</key>
				<string>tv_reload</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>6ED4774B-CDE3-4F5C-BE20-4BE64A3C75B4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># git+ for Alfred

For more info check out the repo: https://github.com/jangelsb/git-plus-alfred-workflow

## 📖 Installation

### Step 1: Set up your `repo list`
```yaml
- title: Repo 1
  path: $repo_path1

- title: Repo 2
  path: "/path/to/repo2"
  config: /path/to/actions.yaml

- title: scripts
  path: /path/to/some/folder
  show_default_commands: false
  config: /path/to/custom/scripts.yaml
```
**NOTE**
* `config` is an optional path to an actions.yaml that is only for that repo. The working directory for that path is the workflow's directory.
* If you set a “bash profile”, you can use enviroment variables for your paths, e.g, `$REPO_PATH`


### Step 2 (optional)

- Use the default settings
  
- or **make it your own**
  - All commands in this workflow are defined in a YAML config file: [actions.yaml](https://github.com/jangelsb/git-plus-alfred-workflow/blob/main/actions.yaml)
  - Copy [actions.yaml](https://github.com/jangelsb/git-plus-alfred-workflow/blob/main/actions.yaml) to your computer
  - Update your workflow to use this file
  - Customize it 😎
  
### Step 3 (optional)
- **Add custom commands:** 
  - Change the inline config or add another config file in your setup
  - Create specific configs for certain repositories using `config` from Step 1

- **Add custom zsh commands:** 
  - `functions.sh` is implicilty imported before each command that is run. So you can easily offload common commands for better reusability 
  - You can copy [functions.sh](https://github.com/jangelsb/git-plus-alfred-workflow/blob/main/functions.sh) and tweak it or you can even link to your own file 


---

## 📂 Config Example

Here’s a quick example of what a YAML config might look like:  

```yaml
- title: fetch
  icon: down.small.png
  command: |
    git fetch -p


- title: create
  icon: create.png
  command: |
    git checkout -b "[input_snake_case]"
```

For more information, see [docs.md](https://github.com/jangelsb/git-plus-alfred-workflow/blob/main/docs.md).

---

## 📝 Version History

#### v2025.2
- Removed a lot of the smart sorting to the actions and cleaned up the menu to be more streamline
  - Now `status` is always at the top and you can see helpful information at a glance 
  - Anything related to branches is inside of `status`, you can instantly search for a local or remote branch
  - Fetch commands now always fetch and rerun the workflow
- Added stash, pop, and create branch
- Add support for `show_default_commands: false` in the Location yaml - this way you can add just custom a custom config like so

```YAML
- title: scripts
  path: /path/to/some/folder
  show_default_commands: false
  config: /path/to/custom/scripts.yaml
```

---

#### v2025.1

####### **Tips &amp; Tricks**
- With `should_skip_smart_sort: true` and `should_trim_values: false` you can do a lot of power tasks in `git+`. Here is a couple of ideas
  - You can run a script in debug mode to see if the output (in Alfred!) is as you expect and then run another command to actually do it
  - You can view hunks in Alfred before you stage / discard a hunk (checkout the new `status` menu)
  - Sky is the limit 😊 - all you gotta do is run a zsh and it will show each line as a separate item in Alfred!
- Reload statements need to be echoed and they need to be in the yaml and not in a different file 

####### **Features**
- Added support for `should_skip_smart_sort`:  (Optional) Tells Alfred to ignore this command from Alfred's smart search. If every command has this as `true` the commands will keep their order, otherwise they will show up below the items that Alfred prioritizes. This property gets passed down to the `values` &amp; `values_command`. It is useful for showing items always in a specific order (see `status` command for an example of using this in a menu)
- Added support for `should_trim_values`:  (Optional) This only applies to `values` &amp; `values_command`. If this is `false`, the values will not trim the whitespace. The default is `true` (see `view hunk` command to see how to use this to display text inline in Alfred)
- Added support for `[input_new_lines]`:  Same as `[input]`, but converts `  \  ` to a new line (there is a space before and after the `\`). This is very helpful for doing multiline text in Alfred.
- Added a new `functions.sh` bash file that is implicitly imported before each command that is run, so you can offload logic to it for better reusability
- Added the ability to:
  - View hunk diffs directly in Alfred
  - Stage, unstage, and dischard hunks
  - Use command modifier to stage / unstage entire files
- Added back buttons for better navigation
- Introduced icons for "back," "back.line", "check," "left.big", "minus", "plus", "right.big", "x", "up.small"

####### **Improvements**
- All commands are now ran in Zsh 
- Revamped the `status` menu to be a lot nicer! 🚀
- Renamed commands for better clarity (e.g., `s -&gt; status`)
- Updated rebase commands to checkout and pull the branch before rebasing

####### **Miscellaneous**
- Updated all inputs to escape: backtick, single quote, double quote, and `$`
- Moved experimental actions to a dedicated `experimental_actions.yaml`
- Updated documentation on the above features as well as using `' '` for the subtitle and icon for blank values


#### v2024.7
**This is a big one!**

####### **Tips &amp; Tricks**
- You can drag and drop the folders in the git repo list
- When press enter on commands, they will be considered "triggered" in Alfred but will auto complete -- which means Alfred will apply smart sorting to them going forward 
- You can always press → on the keyboard to see the command that will be run

####### **General Updates**
- The workflow is now called `git+`, and the bundle ID has changed
- Created detailed documentation on how commands work: [see docs here](https://github.com/jangelsb/git-plus-alfred-workflow/blob/main/docs.md)
- Updated readmes both in the repository and within the workflow, along with new screenshots
- Added shiny new icons 😎

####### **Command Enhancements**
- Consolidated all commands into the `actions.yaml` so all commands are defined in one place
- Updated Alfred to stack the `[view in alfred]` command, allowing you to press escape and return to `git+`
- Added support for **inline commands** using `should_use_values_as_inline_commands`
- Introduced **subtitle actions**, enabling commands to display dynamic info
- Added support for **subcommands**, with examples included in the default configuration
- Added support for `[parent]` or `[parent~n]` dynamic placeholders to reference git+ commands in your bash commands -- useful for subcommands
- Enabled **subtitle searching**, you can now filter by title or subtitle!
- Introduced drag-and-drop support, repo folders are now treated as actual folders. This is great for dragging a Swift package into Xcode for example!
- Added the ability to reload the workflow with `[reload]` or `[reload~n]` commands
- Introduced preliminary support for **Quick Look URLs** with `quicklookurl`

####### **Git-Specific Features**
- Created a brand new **status command** to display:
  - **Staged**, **modified**, and **untracked** files directly in Alfred
  - Allowing you to interactively stage and unstage files in Alfred
- Added **Git tag management**, including:
  - Viewing tags
  - Copying diffs from tags
  - Deleting local and remote tags
- Introduced new **rebase** and **rebase --onto** commands
- Replaced the ⌘+c shortcut for copying a branch name and replaced it with a dedicated command

####### **Bug Fixes**
- Fixed issues with:
  - Checkout and push commands when branch names were very long
  - Modifiers not properly setting up their commands
  - The `pop` command in default actions
- Resolved edge cases in **tokenization logic** to better handle complex commands
- Cleaned up YAML parsing to gracefully handle errors and reduce duplication

---

#### v2024.6
- Now really fixed the issue where you couldn't access bash functions that were in your profile, even though it is sourced (the script needed to run as zsh and not bash)
- Continuing to lay the ground work for more complicated commands (you can now make an action that shows a list of values (predefined or dynamic)
- Added a way to show repo in alfred (by passing [view in alfred] as the command for an action

#### v2024.5
- Fixed issues where you couldn't create a branch or fetch
- Fixed an issue where you couldn't access bash functions that were in your profile, even though it is sourced
- Added true yaml parsing
- Laying the ground work for more robust and complicated config based actions
- Updated the default values to have better onboarding

#### v2024.4
- Add icons for the different commands
- Update workflow icon
- Update screenshots

#### v2024.3
- Add support for yaml based modifiers (you can now add custom modifiers when checking out a branch!)
- source the profile before running a command as well
- Add support for user custom actions based on a yaml file and give some examples
- Update default values, made the git status do a complex bash command to be more helpful</string>
	<key>uidata</key>
	<dict>
		<key>0BA9ED6F-B709-49B6-A448-5F5634D7019F</key>
		<dict>
			<key>note</key>
			<string>run command</string>
			<key>xpos</key>
			<real>995</real>
			<key>ypos</key>
			<real>450</real>
		</dict>
		<key>18F23A81-CB46-4C67-9FE7-9BB4B9AF87C6</key>
		<dict>
			<key>xpos</key>
			<real>1730</real>
			<key>ypos</key>
			<real>510</real>
		</dict>
		<key>1919C9A2-D0D0-4725-A06D-E3BFBF9E4212</key>
		<dict>
			<key>xpos</key>
			<real>1175</real>
			<key>ypos</key>
			<real>450</real>
		</dict>
		<key>1A28BCE0-8BFB-4DE1-B761-4B1098D4A4C7</key>
		<dict>
			<key>xpos</key>
			<real>1215</real>
			<key>ypos</key>
			<real>185</real>
		</dict>
		<key>20EE05A3-8AD6-4A9E-B23F-E3C3874E8593</key>
		<dict>
			<key>note</key>
			<string>parse command &amp; path to reload</string>
			<key>xpos</key>
			<real>1450</real>
			<key>ypos</key>
			<real>305</real>
		</dict>
		<key>22AA9BE8-E9EF-4C3F-AAE4-5DCC50E5EEFE</key>
		<dict>
			<key>note</key>
			<string>extract path</string>
			<key>xpos</key>
			<real>955</real>
			<key>ypos</key>
			<real>265</real>
		</dict>
		<key>23C1F948-18A5-486D-8658-BFFDFD5D3F47</key>
		<dict>
			<key>xpos</key>
			<real>995</real>
			<key>ypos</key>
			<real>910</real>
		</dict>
		<key>2AE00149-7402-460C-9302-707723B3B055</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>710</real>
		</dict>
		<key>2B6F959B-E985-412D-A7EC-D2D084773017</key>
		<dict>
			<key>note</key>
			<string>navigate to path in alfred</string>
			<key>xpos</key>
			<real>1155</real>
			<key>ypos</key>
			<real>725</real>
		</dict>
		<key>310813E7-B9A9-4D9D-8C05-3CACAE54BFB6</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>800</real>
		</dict>
		<key>555BFC35-7D96-47DD-8BE0-73E8B5768E50</key>
		<dict>
			<key>xpos</key>
			<real>1915</real>
			<key>ypos</key>
			<real>340</real>
		</dict>
		<key>5AA4C88E-F48A-4EA7-BCE7-7BE5EDD286A4</key>
		<dict>
			<key>xpos</key>
			<real>1835</real>
			<key>ypos</key>
			<real>340</real>
		</dict>
		<key>6096A812-AA1D-4D56-BCBD-F0CFB5965568</key>
		<dict>
			<key>xpos</key>
			<real>575</real>
			<key>ypos</key>
			<real>180</real>
		</dict>
		<key>68AB44A8-189C-4E9A-B4C1-9BC09975C369</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>665</real>
		</dict>
		<key>6AF906CF-57FA-41B4-967E-D06828E92FBA</key>
		<dict>
			<key>xpos</key>
			<real>1150</real>
			<key>ypos</key>
			<real>625</real>
		</dict>
		<key>6ED4774B-CDE3-4F5C-BE20-4BE64A3C75B4</key>
		<dict>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>1080</real>
		</dict>
		<key>88666437-2755-420F-8B11-5A5225C12C47</key>
		<dict>
			<key>xpos</key>
			<real>520</real>
			<key>ypos</key>
			<real>380</real>
		</dict>
		<key>9B91D089-671D-4721-B83B-02F438D5E8B7</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>890</real>
		</dict>
		<key>A266F8C5-7A35-4798-A0A1-FC822CCD1DAA</key>
		<dict>
			<key>xpos</key>
			<real>1660</real>
			<key>ypos</key>
			<real>1035</real>
		</dict>
		<key>A9F8153D-1EF2-418D-9E9F-34BC7790CD25</key>
		<dict>
			<key>xpos</key>
			<real>2100</real>
			<key>ypos</key>
			<real>605</real>
		</dict>
		<key>B028F4F8-476F-4DBA-AFE4-44BEA4E70411</key>
		<dict>
			<key>xpos</key>
			<real>925</real>
			<key>ypos</key>
			<real>625</real>
		</dict>
		<key>B4417C7E-032D-46A3-84D4-46284A241EDB</key>
		<dict>
			<key>xpos</key>
			<real>1210</real>
			<key>ypos</key>
			<real>1055</real>
		</dict>
		<key>B7FDA93B-4667-4916-959E-E5A38C50D3D2</key>
		<dict>
			<key>xpos</key>
			<real>90</real>
			<key>ypos</key>
			<real>595</real>
		</dict>
		<key>C679AB43-6F01-45E7-968D-B70DD4FF5218</key>
		<dict>
			<key>note</key>
			<string>if is a location, convert back to location title, then navigate to that in alfred</string>
			<key>xpos</key>
			<real>710</real>
			<key>ypos</key>
			<real>765</real>
		</dict>
		<key>CC2552BD-9769-4B08-8A3B-C96EAF7E7E85</key>
		<dict>
			<key>xpos</key>
			<real>1750</real>
			<key>ypos</key>
			<real>340</real>
		</dict>
		<key>D493D841-862A-4D97-A53F-BFE843B58E67</key>
		<dict>
			<key>xpos</key>
			<real>185</real>
			<key>ypos</key>
			<real>670</real>
		</dict>
		<key>D6230711-6C3F-497D-921B-6824C9D43BC4</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>845</real>
		</dict>
		<key>D65C0E83-1763-45CD-B902-B32BC6A2680C</key>
		<dict>
			<key>note</key>
			<string>[input_snake_case]</string>
			<key>xpos</key>
			<real>1315</real>
			<key>ypos</key>
			<real>1035</real>
		</dict>
		<key>E3C7D05D-82C0-4999-8752-C777B4F16BED</key>
		<dict>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>755</real>
		</dict>
		<key>F2EC4A23-334C-4437-8791-A0C75D68BE8C</key>
		<dict>
			<key>xpos</key>
			<real>230</real>
			<key>ypos</key>
			<real>1055</real>
		</dict>
		<key>F3B999B1-84C8-4012-80A3-DA8117961072</key>
		<dict>
			<key>xpos</key>
			<real>1455</real>
			<key>ypos</key>
			<real>685</real>
		</dict>
		<key>F92D1386-9903-4537-A872-16A251038CEB</key>
		<dict>
			<key>xpos</key>
			<real>1560</real>
			<key>ypos</key>
			<real>1065</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>git</string>
				<key>placeholder</key>
				<string>gitx</string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>type this keyword to launch the flow</string>
			<key>label</key>
			<string>keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>input_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
				<key>verticalsize</key>
				<integer>9</integer>
			</dict>
			<key>description</key>
			<string>list out all your repos as a yaml array.  See example 👉

NOTE: if you set a “bash profile”, you can use enviroment variables in your paths, e.g, $env_var</string>
			<key>label</key>
			<string>repo list</string>
			<key>type</key>
			<string>textarea</string>
			<key>variable</key>
			<string>input_repo_list</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string>~/.zshenv</string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>If this value, exists the script will source it to be able to read environment variables defined in the repo config</string>
			<key>label</key>
			<string>bash profile</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_var_profile_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>functions.sh</string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string>functions.sh</string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Use this to offload logic and make the config simpler. These are implicitly imported before any bash command runs.</string>
			<key>label</key>
			<string>bash functions</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_var_functions_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>actions.yaml</string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string>actions.yaml</string>
				<key>required</key>
				<true/>
			</dict>
			<key>description</key>
			<string>A path to a yaml config for actions. Use your own to fully customize.</string>
			<key>label</key>
			<string>config</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_actions_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>A path to another config for actions. This is helpful if you want to use the default actions and add your own commands.</string>
			<key>label</key>
			<string>additional config</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>input_additional_actions_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<false/>
				<key>verticalsize</key>
				<integer>9</integer>
			</dict>
			<key>description</key>
			<string>All commands here will be added to the full list. Checkout the command documentation to the right, under 'Config Example'</string>
			<key>label</key>
			<string>inline config</string>
			<key>type</key>
			<string>textarea</string>
			<key>variable</key>
			<string>input_additional_actions</string>
		</dict>
	</array>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>2025.2</string>
	<key>webaddress</key>
	<string>https://jangelsb.github.io</string>
</dict>
</plist>
