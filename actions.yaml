- title: subcommands
  subcommands:
    - title: open in Terminal
      command: open -a Terminal .
    - title: level 2
      subcommands:
        - title: level 3
          subcommands:
            - title: open in Sublime
              command: echo [parent]


- title: pull
  command: |
    git pull

- title: fetch
  command: |
    git fetch -p

- title: create_branch
  command: |
    echo git checkout -b "[input_snake_case]"


- title: copy current branch name
  command: |
    git branch --show-current | xargs echo -n | pbcopy


- title: open in Terminal
  command: |
    open -a Terminal .

- title: open in Xcode
  command: |
    xed .

- title: open in Sublime (st)
  command: |
    st .

- title: open in Finder
  command: |
    open .

- title: View in Alfred
  command: |
    [view in alfred]


- title: push
  command: |
    branch=$(git branch --show-current);
    git push -u origin $branch
  mods:
    - subtitle: force push
      mod: cmd
      command: |
        branch=$(git branch --show-current);
        git push -uf origin $branch


- title: selection
  command: |
    echo [input]
  values:
    - one
    - two
    - three


- title: find
  command: |
    st "[input]"
  values_command: |
    find . -type f


- title: branches
  values_command: |
    git branch -a | sed 's/^..//' | sed 's/remotes\/origin\///' | sort | uniq
  should_use_values_as_inline_commands: true
  icon_path: fork.png
  subtitle_command: |
    if [[ "$(git branch --show-current)" == "[title]" ]]; 
      then echo "current"; 
    fi

  subcommands:

    - title: checkout
      command: |
        killall Xcode; git stash; git checkout "[parent]"; git pull;
      mods:
        - subtitle: Launch Xcode after
          mod: cmd
          command: killall Xcode; git stash; git checkout "[parent]"; git pull; git pull; xed .

        - subtitle: Launch Sublime after
          mod: alt
          command: killall Xcode; git stash; git checkout "[parent]"; git pull; git pull; st .

    - title: delete local branch
      command: |
        git branch -d "[parent]"
      mods:
        - subtitle: Force delete
          mod: cmd
          command: |
            git branch -D "[parent]"

    - title: delete remote branch
      command: |
        git push origin --delete "[parent]"

    

    - title: copy branch name
      command: |
        echo "[parent]" | xargs echo -n | pbcopy


- title: modified files
  command: echo [input]
  values_command: |
    git diff --name-only # git status --short


- title: copy diff for current branch
  command: |
    branch=$(git branch --show-current); 
    parent=$(git reflog show | grep 'checkout: moving from' | head -n 1 | awk '{print $(NF-2)}'); 
    git log --reverse --format=%B $(git merge-base $parent $branch)..$branch | pbcopy


- title: copy diff from tag
  command: |
    branch=$(git branch --show-current); 
    git log --reverse --format=%B $(git merge-base "[input]" $branch)..$branch | pbcopy
  values_command: git tag
  mods:
    - subtitle: copy for ChatGPT Summary
      mod: cmd
      command: |
        branch=$(git branch --show-current);
        {
          echo "this is a list of commits for my project. can you break it down into a change log, calling out things that are noteworthy"
          echo ''
          git log --reverse --format=%B $(git merge-base "[input]" $branch)..$branch)
        } | pbcopy"